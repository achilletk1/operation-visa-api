/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { MoisPaiementEnLigneListRelationFilter } from "../../moisPaiementEnLigne/base/MoisPaiementEnLigneListRelationFilter";
import { OperationListRelationFilter } from "../../operation/base/OperationListRelationFilter";
import { RoleWhereUniqueInput } from "../../role/base/RoleWhereUniqueInput";
import { VoyageListRelationFilter } from "../../voyage/base/VoyageListRelationFilter";

@InputType()
class UtilisateurWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MoisPaiementEnLigneListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MoisPaiementEnLigneListRelationFilter)
  @IsOptional()
  @Field(() => MoisPaiementEnLigneListRelationFilter, {
    nullable: true,
  })
  moisPaiementEnLignes?: MoisPaiementEnLigneListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  motDePasse?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nom?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OperationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OperationListRelationFilter)
  @IsOptional()
  @Field(() => OperationListRelationFilter, {
    nullable: true,
  })
  operations?: OperationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  prenom?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RoleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RoleWhereUniqueInput)
  @IsOptional()
  @Field(() => RoleWhereUniqueInput, {
    nullable: true,
  })
  role?: RoleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoyageListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VoyageListRelationFilter)
  @IsOptional()
  @Field(() => VoyageListRelationFilter, {
    nullable: true,
  })
  voyages?: VoyageListRelationFilter;
}

export { UtilisateurWhereInput as UtilisateurWhereInput };
