/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CategorieWhereUniqueInput } from "../../categorie/base/CategorieWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MoisPaiementEnLigneWhereUniqueInput } from "../../moisPaiementEnLigne/base/MoisPaiementEnLigneWhereUniqueInput";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { EnumOperationTypeField } from "./EnumOperationTypeField";
import { UtilisateurWhereUniqueInput } from "../../utilisateur/base/UtilisateurWhereUniqueInput";
import { VoyageWhereUniqueInput } from "../../voyage/base/VoyageWhereUniqueInput";

@InputType()
class OperationWhereInput {
  @ApiProperty({
    required: false,
    type: () => CategorieWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategorieWhereUniqueInput)
  @IsOptional()
  @Field(() => CategorieWhereUniqueInput, {
    nullable: true,
  })
  categorie?: CategorieWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MoisPaiementEnLigneWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MoisPaiementEnLigneWhereUniqueInput)
  @IsOptional()
  @Field(() => MoisPaiementEnLigneWhereUniqueInput, {
    nullable: true,
  })
  moisPaiementEnLigne?: MoisPaiementEnLigneWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  montant?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumOperationTypeField,
  })
  @IsEnum(EnumOperationTypeField)
  @IsOptional()
  @Field(() => EnumOperationTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: () => UtilisateurWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UtilisateurWhereUniqueInput)
  @IsOptional()
  @Field(() => UtilisateurWhereUniqueInput, {
    nullable: true,
  })
  utilisateur?: UtilisateurWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoyageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoyageWhereUniqueInput)
  @IsOptional()
  @Field(() => VoyageWhereUniqueInput, {
    nullable: true,
  })
  voyage?: VoyageWhereUniqueInput;
}

export { OperationWhereInput as OperationWhereInput };
